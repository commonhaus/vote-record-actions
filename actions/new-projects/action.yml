name: new-projects
description: Aggregate new project checklists

inputs:
  bot-email:
    description: 'Email for git config'
    default: '41898282+github-actions[bot]@users.noreply.github.com'
  bot-name:
    description: 'Name for git config'
    default: 'GitHub Action'
  commit-message:
    description: 'Commit message'
    default: 'ðŸ“Š Auto-update new project report'
  branch:
    description: 'Branch to push to'
    default: 'main'
  markdown_dir:
    description: Directory for generated markdown content
    required: false

outputs:
  report_updated:
    description: True if changes to report were made
    value: ${{ steps.git_new_project.outputs.updated }}

runs:
  using: "composite"
  steps:
    - name: Configure Git
      shell: bash
      run: |
        git config user.name "${{ inputs.bot-name }}"
        git config user.email "${{ inputs.bot-email }}"

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Download Compiled JS from Release
      shell: bash
      env:
        VOTE_ACTIONS_RELEASE: snapshot
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        echo "Downloading ${VOTE_ACTIONS_RELEASE}"
        mkdir -p vote-record-actions
        pushd vote-record-actions

        gh release download ${VOTE_ACTIONS_RELEASE} \
          --repo commonhaus/vote-record-actions \
          --pattern "*.tar.gz" \

        tar -xzf vote-record-actions-${VOTE_ACTIONS_RELEASE}.tar.gz

        popd
        find vote-record-actions

    - name: Git update project report
      id: git_new_project
      shell: bash
      env:
        COMMIT_MSG:   ${{ inputs.commit-message }}
        GITHUB_TOKEN: ${{ github.token }}
        MD_DIR:       ${{ github.workspace }}/${{ inputs.markdown_dir }}

      run: |
        # collect vote results from recently updated issues, prs, discussions
        node vote-record-actions/dist/newProjects.js "${MD_DIR}"

        git add -A -- "${MD_DIR}"

        if git diff --quiet HEAD; then
          echo "-- No changes -- "
        else
          # commit and push vote results
          git commit -am "${COMMIT_MSG}"
          git pull --rebase
          git push
          echo "updated=true" >> $GITHUB_OUTPUT
        fi
